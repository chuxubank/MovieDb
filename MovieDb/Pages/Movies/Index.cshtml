@page
@model MovieDb.Pages.Movies.IndexModel

@{
    ViewData["Title"] = "Movie Index";
}

<h2>Movie Index</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <select asp-for="CurrentMovieGenre" asp-items="Model.Genres" class="btn-default">
                <option value="">All</option>
            </select>

            Title:
            <input type="text" name="SearchString" value="@Model.CurrentFilter">
            <input type="submit" value="Filter" class="btn btn-default" />
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-currentMovieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movie[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-currentMovieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movie[0].ReleaseDate)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.PriceSort"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-currentMovieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movie[0].Price)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Genre)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RatingSort"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-currentMovieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movie[0].Rating)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movie)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Movie.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movie.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-currentMovieGenre="@Model.CurrentMovieGenre"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-currentMovieGenre="@Model.CurrentMovieGenre"
   class="btn btn-default @nextDisabled">
    Next
</a>